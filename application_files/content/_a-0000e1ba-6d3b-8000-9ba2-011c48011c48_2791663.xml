<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <versionUuid>_a-0000e211-a709-8000-9ba2-011c48011c48_151291</versionUuid>
    <rule>
        <name>ELT_Configuration</name>
        <uuid>_a-0000e1ba-6d3b-8000-9ba2-011c48011c48_2791663</uuid>
        <description>Configuration interface for the email load tester</description>
        <parentUuid>_a-0000e1ba-6d3b-8000-9ba2-011c48011c48_2791673</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>load(
  local!savedEltConfigs: #"SYSTEM_SYSRULES_queryEntity_v1"(
    entity: #"_a-0000e1ba-6d3b-8000-9ba2-011c48011c48_2794633",
    query: #"SYSTEM_SYSRULES_query"(
      pagingInfo: #"SYSTEM_SYSRULES_pagingInfo"(
        startIndex: 1,
        batchSize: -1,
        sort: #"SYSTEM_SYSRULES_sortInfo"(
          field: "name",
          ascending: true
        )
      )
    )
  ).data,
  
  with(
    local!isNewConfig: not(contains(touniformstring(index(local!savedEltConfigs, "name", {})), ri!eltConfigs.name)),
  
    {
      #"SYSTEM_SYSRULES_sectionLayout_v1"(
        divider: "BELOW",
        contents: #"SYSTEM_SYSRULES_richTextDisplayField"(
          value: #"SYSTEM_SYSRULES_richTextHeader"(
            text: "Email Load Tester",
            size: "LARGE"
          )
        )
      ),
      
      #"SYSTEM_SYSRULES_sectionLayout_v1"(
        contents: {
          #"SYSTEM_SYSRULES_sideBySideLayout"(
            alignVertical: "MIDDLE",
            items: {
              #"SYSTEM_SYSRULES_sideBySideItem"(
                width: "5X",
                item: #"SYSTEM_SYSRULES_dropdownField"(
                  placeholderLabel: if(isnull(tostring(local!savedEltConfigs)), "No Saved Configurations", "Saved Configurations"),
                  choiceLabels: index(local!savedEltConfigs, "name", {}),
                  choiceValues: index(local!savedEltConfigs, "name", {}),
                  value: if(
                    local!isNewConfig,
                    null,
                    ri!eltConfigs.name
                  ),
                  saveInto: a!save(
                    ri!eltConfigs,
                    if(
                      isnull(save!value),
                      #"_a-0000e1ba-6d3b-8000-9ba2-011c48011c48_2791897"(),
                      index(local!savedEltConfigs, wherecontains(save!value, local!savedEltConfigs.name))
                    )
                  ),
                  disabled: isnull(tostring(local!savedEltConfigs))
                )
              ),
              #"SYSTEM_SYSRULES_sideBySideItem"(
                width: "1X",
                item: #"SYSTEM_SYSRULES_textField"(
                  readOnly: true
                )
              ),
              #"SYSTEM_SYSRULES_sideBySideItem"(
                width: "MINIMIZE",
                item: #"SYSTEM_SYSRULES_checkboxField"(
                  choiceLabels: {"Save new configuration"},
                  choiceValues: {true},
                  value: if(
                    local!isNewConfig,
                    {true},
                    null
                  ),
                  saveInto: a!save(ri!eltConfigs.name, null),
                  disabled: local!isNewConfig
                )
              ),
              #"SYSTEM_SYSRULES_sideBySideItem"(
                width: "5X",
                item: #"SYSTEM_SYSRULES_textField"(
                  value: if(
                    contains(touniformstring(index(local!savedEltConfigs, "name", {})), ri!eltConfigs.name),
                    null,
                    ri!eltConfigs.name
                  ),
                  saveInto: a!save(ri!eltConfigs.name, trim(save!value)),
                  disabled: not(local!isNewConfig),
                  placeholder: "Enter config name",
                  validations: if(
                    len(ri!eltConfigs.name) &gt; 50,
                    "You cannot enter more than 50 characters",
                    null
                  )
                )
              ),
              #"SYSTEM_SYSRULES_sideBySideItem"(
                width: "8X",
                item: #"SYSTEM_SYSRULES_textField"(
                  readOnly: true
                )
              )
            }
          ),
        }
      ),
      
      #"_a-0000e1ba-6d3b-8000-9ba2-011c48011c48_2794875"(
        eltConfigs: ri!eltConfigs,
        isRunningInstance: false
      ),
      
      #"SYSTEM_SYSRULES_sectionLayout_v1"(
        divider: "BELOW",
        contents: {
          #"SYSTEM_SYSRULES_ButtonLayout"(
            primaryButtons: {
              #"SYSTEM_SYSRULES_ButtonWidget"(
                label: "Save Configurations",
                submit: false,
                validate: true,
                saveInto: #"SYSTEM_SYSRULES_writeToDataStoreEntity"(
                  dataStoreEntity: #"_a-0000e1ba-6d3b-8000-9ba2-011c48011c48_2794633",
                  valueToStore: ri!eltConfigs,
                  onSuccess: a!save(
                    local!savedEltConfigs,
                    #"SYSTEM_SYSRULES_queryEntity_v1"(
                      entity: #"_a-0000e1ba-6d3b-8000-9ba2-011c48011c48_2794633",
                      query: #"SYSTEM_SYSRULES_query"(
                        pagingInfo: #"SYSTEM_SYSRULES_pagingInfo"(
                          startIndex: 1,
                          batchSize: -1,
                          sort: #"SYSTEM_SYSRULES_sortInfo"(
                            field: "name",
                            ascending: true
                          )
                        )
                      )
                    ).data
                  )
                )
              ),
              #"SYSTEM_SYSRULES_ButtonWidget"(
                label: "Save and Start Email Load Tester",
                style: "PRIMARY",
                submit: true,
                validate: true,
                saveInto: #"SYSTEM_SYSRULES_writeToDataStoreEntity"(
                  dataStoreEntity: #"_a-0000e1ba-6d3b-8000-9ba2-011c48011c48_2794633",
                  valueToStore: ri!eltConfigs
                )
              )
            }
          )
        }
      ),
      
      load(
        local!runningInstances: a!queryProcessAnalytics(
          report: #"_a-0000e1ba-6d3b-8000-9ba2-011c48011c48_2794683",
          contextProcessModels: #"_a-0000e1ba-6d3b-8000-9ba2-011c48011c48_2794699",
          query: #"SYSTEM_SYSRULES_query"(
            pagingInfo: #"SYSTEM_SYSRULES_pagingInfo"(
              startIndex: 1,
              batchSize: -1,
              sort: #"SYSTEM_SYSRULES_sortInfo"(
                field: "c2",
                ascending: false
              )
            )
          )
        ),
        
        local!selectedConfigs: null,
        
        {
          #"SYSTEM_SYSRULES_richTextDisplayField"(
            showWhen: local!runningInstances.totalCount = 0,
            value: #"SYSTEM_SYSRULES_richTextItem_v1"(
              text: "There are no active running processes of Email Load Tester",
              style: "EMPHASIS"
            )
          ),
          
          #"SYSTEM_SYSRULES_gridField"(
            label: "Active Running Processes of Email Load Tester",
            showWhen: local!runningInstances.totalCount &gt; 0,
            borderStyle: "LIGHT",
            totalCount: local!runningInstances.totalCount,
            value: #"SYSTEM_SYSRULES_pagingInfo"(
              startIndex: 1,
              batchSize: -1
            ),
            columns: {
              #"SYSTEM_SYSRULES_gridTextColumn"(
                label: "Process",
                field: "c0",
                data: local!runningInstances.data.c5.name,
                links: #"SYSTEM_SYSRULES_forEach"(
                  items: local!runningInstances.data,
                  expression: #"SYSTEM_SYSRULES_dynamicLink"(
                    saveInto: a!save(local!selectedConfigs, fv!item.c5)
                  )
                )
              ),
              #"SYSTEM_SYSRULES_gridTextColumn"(
                label: "Started By",
                field: "c3",
                data: local!runningInstances.data.c3
              ),
              #"SYSTEM_SYSRULES_gridTextColumn"(
                label: "Started On",
                field: "c2",
                alignment: "RIGHT",
                data: local!runningInstances.data.c2
              ),
              #"SYSTEM_SYSRULES_gridTextColumn"(
                label: "Running Until",
                field: "c6",
                alignment: "RIGHT",
                data: #"SYSTEM_SYSRULES_forEach"(
                  items: local!runningInstances.data.c6,
                  expression: index(fv!item.data, "runEndTime", {})
                )
              ),
            }
          ),
          
          if(
            isnull(local!selectedConfigs),
            {},
            #"_a-0000e1ba-6d3b-8000-9ba2-011c48011c48_2794875"(
              eltConfigs: local!selectedConfigs,
              isRunningInstance: true
            )
          )
        }
      )
    }
  )
)</definition>
        <namedTypedValue>
            <name>eltConfigs</name>
            <type>
                <name>ELT_Configs</name>
                <namespace>urn:com:appian:types</namespace>
            </type>
        </namedTypedValue>
        <metadataExpr></metadataExpr>
        <preferredEditor>interface</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role inherit="true" allowForAll="false" name="readers">
            <users/>
            <groups/>
        </role>
        <role inherit="true" allowForAll="false" name="authors">
            <users/>
            <groups/>
        </role>
        <role inherit="true" allowForAll="false" name="administrators">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
    <typedValue>
        <type>
            <name>RuleTestConfig?list</name>
            <namespace>http://www.appian.com/ae/types/2009</namespace>
        </type>
        <value>
            <el>
                <a:name/>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">#"_a-0000e1ba-6d3b-8000-9ba2-011c48011c48_2791897"()</a:value>
                    <a:nameRef>eltConfigs</a:nameRef>
                    <a:id/>
                </a:ruleInputTestConfigs>
                <a:assertions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
            </el>
        </value>
    </typedValue>
    <history>
        <historyInfo versionUuid="_a-0000e1ba-6d3b-8000-9ba2-011c48011c48_2798770"/>
        <historyInfo versionUuid="_a-0000e211-a709-8000-9ba2-011c48011c48_151291"/>
    </history>
</contentHaul>
